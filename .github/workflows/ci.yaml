name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        preset:
          - android-arm
          - android-arm64
          - android-x86
          - android-x86_64
          - ios
          - ios_sim
          - linux-clang
          - linux-gcc
          - macos
          - windows
        config: [Debug, Release]
        shared: [OFF, ON]
        lfs: [OFF, ON]
        include:
          - preset: android-arm
            os: ubuntu-latest
          - preset: android-arm64
            os: ubuntu-latest
          - preset: android-x86
            os: ubuntu-latest
          - preset: android-x86_64
            os: ubuntu-latest
          - preset: ios
            os: macos-latest
          - preset: ios_sim
            os: macos-latest
          - preset: linux-clang
            os: ubuntu-latest
          - preset: linux-gcc
            os: ubuntu-latest
          - preset: macos
            os: macos-latest
          - preset: windows
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: .cpm
          key: zlib-1.2.13
          enableCrossOsArchive: true

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build

      - name: Configure CMake
        run: >
          cmake --preset ${{ matrix.preset }}
          -DCPM_SOURCE_CACHE=".cpm"
          -DBUILD_SHARED_LIBS=${{ matrix.shared }}
          -DZLIB_ENABLE_LFS=${{ matrix.lfs }}

      - name: Build
        run: cmake --build --preset ${{ matrix.preset }} --config ${{ matrix.config }}

      - name: Test
        if: contains(fromJSON('["linux-clang", "linux-gcc", "macos", "windows"]'), matrix.preset)
        run: ctest --preset ${{ matrix.preset }} -C ${{ matrix.config }}

      - name: Install
        run: cmake --build --preset ${{ matrix.preset }}-install --config ${{ matrix.config }}
